/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.apache.flume.source.avro;

@SuppressWarnings("all")
/** * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License. */
@org.apache.avro.specific.AvroGenerated
public interface AvroSourceProtocolNew {
    public static final org.apache.avro.Protocol PROTOCOL = org.apache.avro.Protocol.parse("{\"protocol\":\"AvroSourceProtocolNew\",\"namespace\":\"org.apache.flume.source.avro\",\"doc\":\"* Licensed to the Apache Software Foundation (ASF) under one\\r\\n * or more contributor license agreements.  See the NOTICE file\\r\\n * distributed with this work for additional information\\r\\n * regarding copyright ownership.  The ASF licenses this file\\r\\n * to you under the Apache License, Version 2.0 (the\\r\\n * \\\"License\\\"); you may not use this file except in compliance\\r\\n * with the License.  You may obtain a copy of the License at\\r\\n *\\r\\n * http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing,\\r\\n * software distributed under the License is distributed on an\\r\\n * \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\r\\n * KIND, either express or implied.  See the License for the\\r\\n * specific language governing permissions and limitations\\r\\n * under the License.\",\"types\":[{\"type\":\"enum\",\"name\":\"StatusNew\",\"symbols\":[\"OK\",\"FAILED\",\"UNKNOWN\"]},{\"type\":\"record\",\"name\":\"AvroFlumeEventNew\",\"fields\":[{\"name\":\"headers\",\"type\":{\"type\":\"map\",\"values\":\"string\"}},{\"name\":\"body\",\"type\":\"bytes\"}]}],\"messages\":{\"append\":{\"request\":[{\"name\":\"event\",\"type\":\"AvroFlumeEventNew\"}],\"response\":\"StatusNew\"},\"appendBatch\":{\"request\":[{\"name\":\"events\",\"type\":{\"type\":\"array\",\"items\":\"AvroFlumeEventNew\"}}],\"response\":\"StatusNew\"}}}");
    StatusNew append(AvroFlumeEventNew event) throws org.apache.avro.AvroRemoteException;
    StatusNew appendBatch(java.util.List<AvroFlumeEventNew> events) throws org.apache.avro.AvroRemoteException;

    @SuppressWarnings("all")
    /** * Licensed to the Apache Software Foundation (ASF) under one
     * or more contributor license agreements.  See the NOTICE file
     * distributed with this work for additional information
     * regarding copyright ownership.  The ASF licenses this file
     * to you under the Apache License, Version 2.0 (the
     * "License"); you may not use this file except in compliance
     * with the License.  You may obtain a copy of the License at
     *
     * http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing,
     * software distributed under the License is distributed on an
     * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
     * KIND, either express or implied.  See the License for the
     * specific language governing permissions and limitations
     * under the License. */
    public interface Callback extends AvroSourceProtocolNew {
        public static final org.apache.avro.Protocol PROTOCOL = AvroSourceProtocolNew.PROTOCOL;
        void append(AvroFlumeEventNew event, org.apache.avro.ipc.Callback<StatusNew> callback) throws java.io.IOException;
        void appendBatch(java.util.List<AvroFlumeEventNew> events, org.apache.avro.ipc.Callback<StatusNew> callback) throws java.io.IOException;
    }
}